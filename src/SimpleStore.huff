/* Interface */
#define function setValue(uint256) nonpayable returns ()
#define function getValue() view returns (uint256)

/* Storage Slots */
// bytes32("simplestore.storage.value")
#define constant VALUE_SLOT_NAME = 0x73696d706c6573746f72652e73746f726167652e76616c756500000000000000 

#define macro EIP_1967_SLOT() = takes (0) returns (0) {
    // [bytes32_slot_name, ...]
    0x00 mstore            // []          
    0x01                   // [0x01]
    0x20 0x00 sha3         // [slot_name_hash, 0x01]
    sub                    // [slot_name_hash - 0x01] 
}

/* Methods */
#define macro SET_VALUE() = takes (0) returns (0) {
    0x04 calldataload   // [value]
    [VALUE_SLOT_NAME] EIP_1967_SLOT()
    sstore              // []
}

#define macro GET_VALUE() = takes (0) returns (0) {
    // Load value from storage.
    [VALUE_SLOT_NAME] EIP_1967_SLOT()
    sload                // [value]

    // Store value in memory.
    0x00 mstore

    // Return value
    0x20 0x00 return
}

#define macro MAIN() = takes (0) returns (0) {
    // Identify which function is being called.
    0x00 calldataload 0xE0 shr
    dup1 __FUNC_SIG(setValue) eq set jumpi
    dup1 __FUNC_SIG(getValue) eq get jumpi

    0x00 0x00 revert

    set:
        SET_VALUE()
    get:
        GET_VALUE()

}